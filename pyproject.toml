[tool.poetry]
name = "llm-cost-optimization"
version = "0.1.0"
description = "Comprehensive toolkit for reducing LLM API costs through token optimization"
authors = ["LLM Cost Optimization Contributors"]
readme = "README.md"
packages = [{include = "token_optimizer"}]

[tool.poetry.dependencies]
python = "^3.8"
transformers = "^4.30.0"
torch = "^2.0.0"
tokenizers = "^0.13.3"
symspellpy = "^6.7.7"
pyspellchecker = "^0.7.0"
spacy = "^3.5.0"
nltk = "^3.8"
sentence-transformers = "^2.2.2"
llmlingua = "^0.1.0"
txtai = "^6.0.0"
sentencepiece = "^0.1.99"
rich = "^13.7.0"
deepdiff = "^6.7.0"
termcolor = "^2.4.0"
click = "^8.1.3"
pyyaml = "^6.0"
tqdm = "^4.65.0"
pandas = "^2.0.0"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
jupyter = "^1.0.0"
ipykernel = "^6.0.0"

[tool.poetry.scripts]
token-optimize = "token_optimizer.pipeline:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]